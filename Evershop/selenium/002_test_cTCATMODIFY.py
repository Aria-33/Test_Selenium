# Generated by Selenium IDE
import pytest
import time
import json
import os
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test002_test_cTCATMODIFY():
    def test_cTCATMODIFY002(self, driver):
        self.driver = driver
        self.wait = WebDriverWait(self.driver, 10)
        self.actions = ActionChains(self.driver)
        
        self.driver.get("http://localhost:3000/admin/login")
        
        # Attendre et remplir le formulaire de connexion
        email_field = self.wait.until(EC.presence_of_element_located((By.NAME, "email")))
        email_field.send_keys("oddone.lea@gmail.com")
        
        password_field = self.wait.until(EC.presence_of_element_located((By.NAME, "password")))
        password_field.send_keys("a123456789")
        
        login_button = self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".button")))
        login_button.click()
        
        # Attendre et cliquer sur Categories
        categories_link = self.wait.until(EC.element_to_be_clickable((By.LINK_TEXT, "Categories")))
        categories_link.click()
        
        # Attendre et vérifier le bouton
        button = self.wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, ".button > span")))
        assert button.is_displayed()
        button.click()
        
        # Attendre et remplir le formulaire de catégorie
        name_field = self.wait.until(EC.presence_of_element_located((By.ID, "name")))
        name_field.click()
        name_field.send_keys("Mariage")
        
        url_key_field = self.wait.until(EC.presence_of_element_located((By.ID, "urlKey")))
        url_key_field.click()
        url_key_field.send_keys("mariage")
        
        meta_title_field = self.wait.until(EC.presence_of_element_located((By.ID, "metaTitle")))
        meta_title_field.click()
        meta_title_field.send_keys("Mariage")
        
        meta_keywords_field = self.wait.until(EC.presence_of_element_located((By.ID, "metakeywords")))
        meta_keywords_field.click()
        meta_keywords_field.send_keys("mariage")
        
        meta_description_field = self.wait.until(EC.presence_of_element_located((By.ID, "meta_description")))
        meta_description_field.click()
        meta_description_field.send_keys("Mariage")
        
        # Télécharger l'image
        add_image_button = self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, "button.button.default span")))
        add_image_button.click()
        time.sleep(1)  # Attente pour l'ouverture du sélecteur de fichier
        
        image_path = os.path.abspath("C:/tools/Tests Selenium/Evershop/images/gateau_orchidees.png")
        image_upload = self.wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "input[type='file']")))
        image_upload.send_keys(image_path)
        time.sleep(2)  # Attente pour le téléchargement de l'image
        
        # Attendre et cliquer sur le bouton de soumission
        submit_button = self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".primary > span")))
        submit_button.click()

#FIN DE LA CREATION DE LA CATEGORIE MARIAGE

        # BOUTON BACK
        back_button = self.wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "a.breadcrum-icon")))
        self.actions.move_to_element(back_button).click().perform()
        
#MODIFICATION DE LA CATEGORIE MARIAGE

        # MARIAGE LIN DANS LE TABLEAU
        mariage_link = self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, "table.listing tbody tr td div a.hover\\:underline.font-semibold")))
        self.actions.move_to_element(mariage_link).click().perform()
        time.sleep(2)  # Attente après clic

        # Attendre et remplir le formulaire de catégorie
        name_field = self.wait.until(EC.presence_of_element_located((By.ID, "name")))
        name_field.click()
        name_field.send_keys(" et pacs")
        
        url_key_field = self.wait.until(EC.presence_of_element_located((By.ID, "urlKey")))
        url_key_field.click()
        url_key_field.send_keys("-et-pacs")
        
        meta_title_field = self.wait.until(EC.presence_of_element_located((By.ID, "metaTitle")))
        meta_title_field.click()
        meta_title_field.send_keys(" et pacs")
        
        meta_keywords_field = self.wait.until(EC.presence_of_element_located((By.ID, "metakeywords")))
        meta_keywords_field.click()
        meta_keywords_field.send_keys(" et pacs")
        
        meta_description_field = self.wait.until(EC.presence_of_element_located((By.ID, "meta_description")))
        meta_description_field.click()
        meta_description_field.send_keys(" et pacs")

        # Attendre et cliquer sur le bouton de soumission
        submit_button = self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".primary > span")))
        submit_button.click()